name: CI - Docs and Storybook Build

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  build-docs:
    name: Build Documentation and Storybook
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint code
        run: pnpm lint

      - name: Type check
        run: pnpm typecheck

      - name: Build Storybook
        run: pnpm sb:build

      - name: Build API documentation
        run: pnpm api:build

      - name: Build docs
        run: pnpm docs:build

      - name: Upload Storybook artifacts
        uses: actions/upload-artifact@v4
        with:
          name: storybook-static
          path: storybook-static/
          retention-days: 7

      - name: Upload API docs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: api-docs
          path: docs/
          retention-days: 7

      - name: Upload docs build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs-build
          path: website/build/
          retention-days: 7

  # Optional Vercel preview deployment
  deploy-preview:
    name: Deploy Preview to Vercel
    runs-on: ubuntu-latest
    needs: build-docs
    if: github.event_name == 'pull_request' && vars.VERCEL_ORG_ID != '' && vars.VERCEL_PROJECT_ID != ''

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download Storybook artifacts
        uses: actions/download-artifact@v4
        with:
          name: storybook-static
          path: storybook-static/

      - name: Install Vercel CLI
        run: pnpm add -g vercel@latest

      - name: Pull Vercel environment information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ vars.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ vars.VERCEL_PROJECT_ID }}

      - name: Build project artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ vars.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ vars.VERCEL_PROJECT_ID }}

      - name: Deploy to Vercel
        id: deploy
        run: |
          url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "preview-url=$url" >> $GITHUB_OUTPUT
        env:
          VERCEL_ORG_ID: ${{ vars.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ vars.VERCEL_PROJECT_ID }}

      - name: Comment PR with preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Preview deployed!**
              
              ðŸ“š **Documentation**: ${{ steps.deploy.outputs.preview-url }}
              ðŸ“– **Storybook**: ${{ steps.deploy.outputs.preview-url }}/storybook-static
              ðŸ”§ **API Docs**: ${{ steps.deploy.outputs.preview-url }}/docs
              
              Preview will be updated automatically on new commits.`
            })
